# renovate: datasource=url depName=ghostfolio-compose versioning=digest
# url: https://raw.githubusercontent.com/ghostfolio/ghostfolio/refs/heads/main/docker/docker-compose.yml
# digest: sha256:15883c8dfa24e4fdb4ac501b3614e5eb85963b7bca96b6418546e5c706e614f2

name: ghostfolio
services:
  ghostfolio:
    image: ghostfolio/ghostfolio:latest@sha256:98c7801db36aae23522956e288ba0eadcd23b8fd88750b518c09b7228b20f326
    container_name: ghostfolio
    restart: unless-stopped
    init: true
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    env_file:
      - .env
    ports:
      - "127.0.0.1:{{ services.ghostfolio.port }}:3333"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3333/api/v1/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:15-alpine
    container_name: gf-postgres
    restart: unless-stopped
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_READ_SEARCH
      - FOWNER
      - SETGID
      - SETUID
    security_opt:
      - no-new-privileges:true
    env_file:
      - .env
    healthcheck:
      test:
        ["CMD-SHELL", 'pg_isready -d "$${POSTGRES_DB}" -U $${POSTGRES_USER}']
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - "{{ ghostfolio_dir }}/db:/var/lib/postgresql/data"

  redis:
    image: redis:alpine
    container_name: gf-redis
    restart: unless-stopped
    user: "999:1000"
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    env_file:
      - .env
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
    healthcheck:
      test:
        ["CMD-SHELL", 'redis-cli --pass "$${REDIS_PASSWORD}" ping | grep PONG']
      interval: 10s
      timeout: 5s
      retries: 5
